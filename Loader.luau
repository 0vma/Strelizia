local a local b,c,d,e,f,g,h,j,k,l,m,p,q,r,s,t,u,v,w,x={function()local b,c,d=a(1 )return(function(...)if(not game:IsLoaded())then game.Loaded:Wait()end local e,f =d(c.Library),getgenv()if f.Library then f.Library:Unload()end local g=e.Shared: Get()local h,i=g.Modules.Places,g.Modules.Interface:Get'Obsidian'local j=h. GetPlaceFromId(game.PlaceId)if not j then return i.Main:Notify{Title= 'strelizia.cc | loader',Description= [[this game is currently not supported by strelizia! if you think that this is a mistake then join our discord server and report this issue!]] ,Time=5}end if h.IsExecutorBlacklisted(j.BlacklistedExecutors)then return i.Main :Notify{Title='strelizia.cc | loader',Description= 'this script is not compatible with your executor!',Time=3}end local k=(j. Downtime.Status and j.Downtime.Message)if k then return i.Main:Notify{Title= 'strelizia.cc | loader',Description=string.format( [[unable to load %s script because it's currently experiencing a downtime! specificed downtime reason: %s]] ,tostring(j.Name),tostring(k))}end local l,m=e.Modules.KeyFile,e.Modules.Luarmor :Init(j.Script)if j.Keyless then i.Main:Notify{Title='strelizia.cc | loader', Description= [[script for this game is currently keyless, no key required! loading script...]] ,Time=3}return m:LoadScript()end local n=l:Read()if n~=nil then local o=m:Check( n.Key)if o.code=='KEY_VALID'then i.Main:Notify{Title='strelizia.cc | loader', Description='saved key is valid! loading script!',Time=3}return m:LoadScript(n. Key)end i.Main:Notify{Title='strelizia.cc | loader',Description= 'saved key is invalid! please enter a new key!',Time=3}l:Erase()end local o=e. Interface:Create()local p=o.Library.Buttons local q,r=p.CheckKeyButton,p. GetKeyButton local s=function(s)if s:len()~=32 then o.Library:Notify{Title= 'strelizia.cc | loader',Description='invalid key length!',Time=2}return end q: SetDisabled(true)o.Library:Notify{Title='strelizia.cc | loader',Description= 'checking your key, please wait...',Time=2}local t=m:Check(s)o.Library:Notify{ Title='strelizia.cc | loader',Description=t.message,Time=2}if t.code== 'KEY_VALID'then l:Write(s)o.Library:Unload()return m:LoadScript(s)else q: SetDisabled(false)end end q.Func=function()return s(o.Library.Options. ScriptKeyInput.Value)end r.Func=function()setclipboard 'https://linktr.ee/strelizia.cc'return o.Library:Notify{Title= 'strelizia.cc | loader',Description= 'successfully copied keysystem link tree to your clipboard!',Time=3}end p. JoinDiscordButton.Func=function()o.Library:Notify{Title='strelizia.cc | loader', Description='successfully copied/prompted discord join code!'}return g.Commons. JoinDiscord(g.Constants.DiscordJoinCode)end p.UnloadScript.Func=function()return o.Library:Unload()end end)()end,function()local b,c,d=a(2)return(function(...) local e={}e.Cache={}e.Services=setmetatable({},{__index=function(f,g)local h,i= pcall(game.GetService,game,g)if h then i=cloneref(i)rawset(f,g,i)end return i end})e.GetLazyTree=function(f,g)local h,i=g or{},{}for j,k in f:GetChildren()do i[k.Name]=k end return setmetatable(h,{__index=function(j,k)local l=i[k]assert(l ,string.format("unable to index '%s' as its not a valid member of '%s'", tostring(k),tostring(f.Name)))local m=l if l.ClassName=='ModuleScript'then m=nil local n,o=pcall(d,l)assert(n and typeof(o)=='function',string.format( "failed to load module '%s' in '%s': %s",tostring(k),tostring(f.Name),tostring( typeof(o)~='function'and'returned object is not a function'or tostring(o)))) local p,q=pcall(o,e)assert(p,string.format( "failed to initialize module '%s' in '%s': %s",tostring(k),tostring(f.Name), tostring(tostring(q))))if typeof(q)=='function'and islclosure(q)then q= newcclosure(q)end m=q end rawset(j,k,m)return m end,__newindex=function()assert( false,'you cannot manually write keys to this table')end,__metatable= 'this metatable is locked!'})end do local f={}local g,h=function()return f end,{ isfunctionhooked,game.GetObjects,d,clonefunction,loadstring}hookfunction(g,g)for i,j in h do if(not isfunctionhooked(j))or(not iscclosure(j))then rawset(e,debug. getinfo(j).name,clonefunction(j))continue end while true do end end local i= clonefunction(g)if(not isfunctionhooked(g))or(i==g)or(debug.getupvalue(i,1)~= debug.getupvalue(g,1))then while true do end end end return e.GetLazyTree(c,e) end)()end,function()a(3)return(function(...)return function(b)return setmetatable({},{__index=function(c,d)local e,f=pcall(game.GetService,game,d)if e then f=cloneref(f)rawset(c,d,f)return f end return nil end})end end)()end, function()local b,c=a(4)return(function(...)return function(d)return d. GetLazyTree(c)end end)()end,function()a(5)return(function(...)return function(b) local c,d={},b.Shared:Get()local e,f,g=d.Commons.Base64,'strelizia.key',b. Services.HttpService c.Erase=function(h)return delfile(f)end c.Read=function(h) if(not isfile(f))then return end local i,j=pcall(e.Decode,readfile(f))if not i then return c:Erase()end local k,l=pcall(g.JSONDecode,g,j)if not k then return c :Erase()end return l end c.Write=function(h,j)return writefile(f,e.Encode(g: JSONEncode{Key=j}))end return c end end)()end,function()a(6)return(function(...) return function(b)local c,d={}, [[luaarmor api hasn't been initialized yet! make sure to call :Init() before calling other methods!]] c.Init=function(e,f)e.Cached=loadstring(game:HttpGet 'https://sdkapi-public.luarmor.net/library.lua')()e.Cached.script_id=f return e end c.Get=function(e)return e.Cached end c.Check=function(e,f)assert(e:Get(),d) return e:Get().check_key(f)end c.LoadScript=function(e,f)assert(e:Get(),d) getgenv().script_key=f return e:Get().load_script()end c.Purge=function(e) assert(e:Get(),d)e:Get().purge_cache()end return c end end)()end,function()a(7) return(function(...)return function(b)local c,d=getgenv(),b.Shared:Get()local e, f,g,h,j,k=d.Constants,d.Modules.Places,d.Commons.Time,d.RBXUtil.TableUtil,d. Modules.Interface,d.Modules.Color local l,m=e.Characters,k.new(ColorSequence. new(Color3.fromRGB(93,13,115),Color3.fromRGB(196,22,89)))j.Create=function(p) local q=j:Get'Obsidian'local r=q.Main j.Library=r local s,t=f.GetPlaceFromId( game.PlaceId),r:CreateWindow{Center=true,AutoShow=true,Resizable=true,Compact= true,ShowCustomCursor=true,Size=UDim2.fromOffset(600,500),Title='key system', Footer='strelizia.cc',Icon=79981166576877,NotifySide='Left'}local u={Home=t: AddTab('Home','house')}local v=u.Home:AddGroupbox{Side=1,Name='Key System', IconName='key'}v:AddInput('ScriptKeyInput',{Placeholder='key goes here!', ClearTextOnFocus=true,Text='Script Key',Tooltip= [[paste your script key in here to access the script, press get key down below in order to get the key]] })v:AddButton('CheckKeyButton',{Text='Check Key',Tooltip= [[checks if the key in the input above is valid and loads the script]]}): AddButton('GetKeyButton',{Text='Get Key',Tooltip= 'prompts ad provider links which lead to the script key'})local w,x,y=u.Home: AddGroupbox{Side=1,Name='Information',IconName='info'},{string.format( [[If you don't have a key yet, press %s, choose an %s and finish the ad flow after which you will receive %s.]] ,tostring(m'Get Key'),tostring(m'ad provider'),tostring(m'your key')),string. format( [[Paste your %s into the %s above and press validate in order to load the script.]] ,tostring(m'key'),tostring(m'input box')),string.format( [[In case you run into issues or have questions make sure to join our %s by clicking the button below!]] ,tostring(m'discord server'))},''for z,A in x do y=y..string.format( '%s %s \n \n',tostring(l.BulletPoint),tostring(A))end w:AddLabel('TutorialLabel' ,{Text=y:sub(1,-4),DoesWrap=true})w:AddDivider()w:AddButton('JoinDiscordButton', {Text='Join Discord Server',Tooltip= [[pressing this will either prompt our discord server directly in the app or copy the link to your clipboard]] })w:AddButton('UnloadScript',{Text='Unload',Tooltip= 'pressing this will unload the script loader'})local z=u.Home:AddGroupbox{Side=2 ,Name='Script Update Log',IconName='clipboard-clock'}z:AddLabel( 'ScriptUpdateDate',{Text=string.format('Last Updated at: %s',tostring(g. FormatTime(s.Update.Time,'MM/DD/YYYY HH:mm'))),DoesWrap=true,Alignment=Enum. TextXAlignment.Center})z:AddDivider()z:AddLabel('ScriptUpdateDate',{Text=table. concat(s.Update.Log,'\n'),DoesWrap=true,Alignment=Enum.TextXAlignment.Center}) return j end return j end end)()end,function()a(8)return(function(...)return function(b)local c,d={},{}local function RequireModule(e)if d[e]then return d[e] end local f=b.loadstring(string.format('--!optimize 2 \n%s',tostring(e.Source))) local g=table.clone(getfenv(f))g.require=RequireModule g.script=e setfenv(f,g) local h=f()d[e]=h return h end c.Get=function(e)if c.Cached then return c.Cached end c.Cached=RequireModule(b.getobjects'rbxassetid://128314407776912'[1])return c.Cached end return c end end)()end},{{1,4,{'Loader'},{{2,2,{'Library'},{{4,2,{ 'Modules'},{{5,2,{'KeyFile'}},{6,2,{'Luarmor'}}}},{7,2,{'Interface'}},{3,2,{ 'Services'}},{8,2,{'Shared'}}}}}}},'0.4.2','koronis.xyz',string,task, setmetatable,error,next,table,unpack,coroutine,script,type,require,pcall, tostring,tonumber,_VERSION local y,z,A,B,C,D,E=l.insert,l.remove,l.freeze or function(y)return y end,p.wrap,f.sub,f.match,f.gmatch if w and C(w,1,4)=='Lune' then local F,G=t(s,'@lune/task')if F and G then g=G end end local F=g and g. defer local G,H,I,J,K,L,M,N,O=F or function(G,...)B(G)(...)end,{[1]='Folder',[2] ='ModuleScript',[3]='Script',[4]='LocalScript',[5]='StringValue'},{},{},{},{},{} ,{},{}local P,Q={GetFullName={{},function(P)local Q,R=P.Name,P.Parent while R do Q=R.Name..'.'..Q R=R.Parent end return Q end},GetChildren={{},function(P)local Q ={}for R in k,O[P]do y(Q,R)end return Q end},GetDescendants={{},function(P)local Q={}for R in k,O[P]do y(Q,R)for S,T in k,R:GetDescendants()do y(Q,T)end end return Q end},FindFirstChild={{'string','boolean?'},function(P,Q,R)local S=O[P] for T in k,S do if T.Name==Q then return T end end if R then for T in k,S do return T:FindFirstChild(Q,true)end end end},FindFirstAncestor={{'string'}, function(P,Q)local R=P.Parent while R do if R.Name==Q then return R end R=R. Parent end end},WaitForChild={{'string','number?'},function(P,Q)return P: FindFirstChild(Q)end}},{}for R,S in k,P do local T,U,V=S[1],S[2],{}for W,X in k, T do local Y,Z=D(X,'^([^%?]+)(%??)')V[W]={Y,Z}end Q[R]=function(W,...)if not O[W ]then j("Expected ':' not '.' calling member function "..R,2)end local X={...} for Y,Z in k,V do local _=X[Y]local aa,ab,ac=r(_),Z[1],Z[2]if _==nil and not ac then j('Argument '.._..' missing or nil',3)end if ab~='any'and aa~=ab and not(aa =='nil'and ac)then j('Argument '..Y..' expects type "'..ab..'", got "'..aa..'"', 2)end end return U(W,...)end end local aa=function(aa,ab,ac)local R,S,T,U,V,W=h( {},{__mode='k'}),function(R)j(R..' is not a valid (virtual) member of '..aa.. ' "'..ab..'"',3)end,function(R)j('Unable to assign (virtual) property '..R.. '. Property is read only',3)end,{},{}V.__metatable=false V.__index=function(X,Y) if Y=='ClassName'then return aa elseif Y=='Name'then return ab elseif Y== 'Parent'then return ac elseif aa=='StringValue'and Y=='Value'then return W else local Z=Q[Y]if Z then return Z end end for Z in k,R do if Z.Name==Y then return Z end end S(Y)end V.__newindex=function(X,Y,Z)if Y=='ClassName'then T(Y)elseif Y =='Name'then ab=Z elseif Y=='Parent'then if Z==U then return end if ac~=nil then O[ac][U]=nil end ac=Z if Z~=nil then O[Z][U]=true end elseif aa=='StringValue' and Y=='Value'then W=Z else S(Y)end end V.__tostring=function()return ab end h(U ,V)O[U]=R if ac~=nil then O[ac][U]=true end return U end local function CreateRefFromObject(ab,ac)local R,S,T,U=ab[1],ab[2],ab[3],ab[4]local V=H[S]local W=T and z(T,1)or V local X=aa(V,W,ac)I[R]=X if T then for Y,Z in k,T do X[Y]=Z end end if U then for Y,Z in k,U do CreateRefFromObject(Z,X)end end return X end local ab=aa('Folder','['..e..']')for ac,R in k,c do CreateRefFromObject(R,ab)end for ac,R in k,b do local S=I[ac]J[S]=R K[S]=ac local T=S.ClassName if T== 'LocalScript'or T=='Script'then y(M,S)end end local ac=function(ac)local R,S=ac. ClassName,L[ac]if S and R=='ModuleScript'then return m(S)end local T,U=J[ac], function(T)T=u(T)local U,V,W=ac:GetFullName(),D(T,'[^:]+:(%d+): (.+)')if not V or not x then return U..':*: '..(W or T)end V=v(V)local X=K[ac]local Y=x[X]local Z=V-Y+1 if Z<0 then Z='?'end return U..':'..Z..': '..W end if R=='LocalScript'or R=='Script'then local V,W=t(T)if not V then j(U(W),0)end else local V={t(T)} local W=z(V,1)if not W then local X=z(V,1)j(U(X),0)end L[ac]=V return m(V)end end a=function(R)local S,T,U=I[R],function(S,...)local T={t(S,...)}local U=z(T,1 )if not U then j(T[1],3)end return m(T)end,A(h({},{__index=N,__newindex=function (S,T,U)N[T]=U end,__len=function()return#N end,__iter=function()return k,N end}) )local ad,ae,af=A{version=d,envname=e,shared=U,script=q,require=s},S,function(V, ...)local W,X,Y=r(V),'Attempted to call require with a non-ModuleScript', 'Attempted to call require with self'if W=='table'and O[V]then if V.ClassName~= 'ModuleScript'then j(X,2)elseif V==S then j(Y,2)end return ac(V)elseif W== 'string'and C(V,1,1)~='@'then if#V==0 then j( 'Attempted to call require with empty string',2)end local Z=S if C(V,1,1)=='/' then Z=ab elseif C(V,1,2)=='./'then V=C(V,3)end local _ for ad in E(V, '([^/]*)/?')do local ae=ad if ad=='..'then ae='Parent'end if ae~=''then local af =Z:FindFirstChild(ae)if not af then local ag=Z.Parent if ag then af=ag: FindFirstChild(ae)end end if af then Z=af elseif ad~=_ and ad~='init'and ad~= 'init.server'and ad~='init.client'then j('Virtual script path "'..V.. '" not found',2)end end _=ad end if Z.ClassName~='ModuleScript'then j(X,2)elseif Z==S then j(Y,2)end return ac(Z)end return T(s,V,...)end return ad,ae,af end for ad,ae in k,M do G(ac,ae)end
